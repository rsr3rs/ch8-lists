install.packages("lintr")
lintr::lint("exercise.R")
# Create a vector `my_breakfast` of everything you ate for breakfast
my_breakfact <- c("tator tors", "scrambled eggs", "sausage")
# Create a vector `my_lunch` of everything you ate (or will eat) for lunch
my_lunch <- c("beef gyro", "fries")
# Create a list `meals` that has contains your breakfast and lunch
meals <- list(my_breakfact, my_lunch)
meals[[1]]
meals[[2]]
meals[[1]]
meals$my_lunch
# Create a list `meals` that has contains your breakfast and lunch
meals <- list(breakfast = my_breakfast, lunch = my_lunch)
# Create a vector `my_breakfast` of everything you ate for breakfast
my_breakfast <- c("tator tors", "scrambled eggs", "sausage")
# Create a list `meals` that has contains your breakfast and lunch
meals <- list(breakfast = my_breakfast, lunch = my_lunch)
meals[[1]]
meals$breakfast
# Add a "dinner" element to your `meals`` list that has what you plan to eat
# for dinner
meals$dinner <- "no idea"
# Create a vector `my_breakfast` of everything you ate for breakfast
my_breakfast <- c("tator tors", "scrambled eggs", "sausage")
# Create a vector `my_lunch` of everything you ate (or will eat) for lunch
my_lunch <- c("beef gyro", "fries")
# Create a list `meals` that has contains your breakfast and lunch
meals <- list(breakfast = my_breakfast, lunch = my_lunch)
# Add a "dinner" element to your `meals`` list that has what you plan to eat
# for dinner
meals$dinner <- "no idea"
setwd("D:/Systemdata/Desktop/Info201/ch8-lists/exercise-1")
# Exercise 1: creating and accessing lists
# Create a vector `my_breakfast` of everything you ate for breakfast
my_breakfast <- c("tator tors", "scrambled eggs", "sausage")
# Create a vector `my_lunch` of everything you ate (or will eat) for lunch
my_lunch <- c("beef gyro", "fries")
# Create a list `meals` that has contains your breakfast and lunch
meals <- list(breakfast = my_breakfast, lunch = my_lunch)
# Add a "dinner" element to your `meals`` list that has what you plan to eat
# for dinner
meals$dinner <- "no idea"
# Use dollar notation to extract your `dinner` element from your list
# and save it in a vector called 'dinner'
dinner <- meals$dinner
# Use double-bracket notation to extract your `lunch` element from your list
# and save it in your list as the element at index 5 (no reason beyond practice)
meals[[5]] <- meals[[2]]
# Use single-bracket notation to extract your breakfast and lunch from your list
# and save them to a list called `early_meals`
early_meals <- meals([1:2]
### Challenge ###
# Create a list that has the number of items you ate for each meal
# Hint: use the `lappy()` function to apply the `length()` function to each item
lappky(meals, length)
# Write a function `add_pizza` that adds pizza to a given meal vector, and
# returns the pizza-fied vector
add_pizza <- function(meal) {
meal <- c(meal, "pizza")
meal
}
# Create a vector `better_meals` that is all your meals, but with pizza!
better_meals <- lapply(meals,add_pizza)
# Use single-bracket notation to extract your breakfast and lunch from your list
# and save them to a list called `early_meals`
early_meals <- meals[1:2]
height <- 58:62
# Exercise 1: creating data frames
# Create a vector of the number of points the Seahawks scored in the first 4 games
# of the season (google "Seahawks" for the scores!)
points <- c(12, 3, 37, 27)
# Create a vector of the number of points the Seahwaks have allowed to be scored
# against them in each of the first 4 games of the season
allowed_score <- c(10, 9, 18, 17)
# Combine your two vectors into a dataframe called `games`
games <- data.frame(points, allowed_score)
# Create a new column "diff" that is the difference in points between the teams
# Hint: recall the syntax for assigning new elements (which in this case will be
# a vector) to a list!
games$diff <- games$points - game$allowed_score
# Create a new column "won" which is TRUE if the Seahawks won the game
games$won <- games$diff > 0
# Create a vector of the opponent names corresponding to the games played
opponents <- c("Dolphines", "Rams", "49ers", "Jets")
# Assign your dataframe rownames of their opponents
rownames(games) <- opponents
# View your data frame to see how it has changed!
View(games)
# Create a new column "diff" that is the difference in points between the teams
# Hint: recall the syntax for assigning new elements (which in this case will be
# a vector) to a list!
games$diff <- games$points - games$allowed_score
# Create a new column "won" which is TRUE if the Seahawks won the game
games$won <- games$diff > 0
# View your data frame to see how it has changed!
View(games)
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- c(paste("Employee"+ 1:100))
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- c(paste("Employee"+ c[1:100]))
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- c(paste("Employee"+ c(1:100]))
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- c(paste("Employee"+ c([1:100]))
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- c(paste("Employee"+ c(1:100)))
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- c(paste("Employee", c(1:100)))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries <- c(runif(100,40000,50000))
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- c(paste("Employee", c(1:100)))
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries2017 <- c(runif(100,40000,50000))
# Create a vector of 100 salaries in 2018 that have changed from 2017
# Use `runif()` to add a random number between -5000 and 10000 to each of 2017's
# salaries (the negative number means that a salary may have decreased!)
salaries2018 <- salaries2017 + c(runif(100,-5000,10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries2017, salaries2018, stringAsFactors = FALSE)
View(salaries)
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries2017, salaries2018, stringAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2017 and 2018
salaries$change <- salaries2018 - salaries2017
# Create a column 'got_raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got_raise <- salaries$change > 0
